{"ast":null,"code":"var _jsxFileName = \"/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/AnswerForm.js\";\nimport '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass AnswerForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleText = e => {\n      this.setState({\n        text: e.target.value\n      });\n    };\n    this.validateEmpty = (field, err, label) => {\n      field = field.trim();\n      if (field === \"\") {\n        err[label] = \"^Please fill out this field\";\n        return true;\n      }\n      return false;\n    };\n    this.validateHyperlink = (text, err, label) => {\n      let link = /\\[(.*?)\\]\\((.*?)\\)/g; //[...](...)\n      let check;\n      while ((check = link.exec(text)) !== null) {\n        if (check[1] === '' || check[2] === '') {\n          console.log(\"NOT ALLOWED\");\n          err[label] = \"^Neither the name nor link can be empty\";\n          return true;\n        }\n        if (!/^https?:\\/\\//.test(check[2])) {\n          console.log(\"NOT ALLOWED\");\n          err[label] = \"^A hyperlink must begin with http:// or https://\";\n          return true;\n        }\n      }\n      return false;\n    };\n    this.handleText = this.handleText.bind(this);\n    this.handleUser = this.handleUser.bind(this);\n    this.handlePost = this.handlePost.bind(this);\n    this.validateEmpty = this.validateEmpty.bind(this);\n    this.validateHyperlink = this.validateHyperlink.bind(this);\n    this.state = {\n      text: '',\n      ansBy: '',\n      ansDate: new Date(),\n      errors: {}\n    };\n  }\n  handlePost() {\n    const ansBy = this.state.ansBy;\n    const text = this.state.text;\n    let err = {};\n    let a = this.validateEmpty(ansBy, err, \"eansBy\");\n    let b = this.validateEmpty(text, err, \"etext\");\n    let c = this.validateHyperlink(text, err, \"elink\");\n    this.setState({\n      errors: err\n    });\n    if (!a && !b && !c) {\n      const answer = {\n        text: text,\n        ans_by: ansBy,\n        ansDate: new Date(),\n        comments: []\n      };\n      //add the answer to the current questions' answers\n      const question = this.props.currQuestion.url;\n      axios.post(`http://localhost:8000/addAnswer/${question}`, answer).then(response => {\n        this.props.updatePage(\"answer_page\");\n        this.props.updateAnswers();\n        this.props.onQuestion(response.data);\n      }).catch(error => {\n        console.error('Error creating answer:', error);\n      });\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"answer_form\",\n        className: \"ans_form\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"a_textbox\",\n            className: \"labels\",\n            id: \"six\",\n            children: [\" Answer Text\", /*#__PURE__*/_jsxDEV(\"sup\", {\n              children: \"*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 80\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 100\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            value: this.state.text,\n            onChange: this.handleText,\n            id: \"a_textbox\",\n            name: \"a_textbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 129\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            htmlFor: \"error6\",\n            className: \"error\",\n            id: \"error6\",\n            name: \"error6\",\n            children: [this.state.errors[\"etext\"], this.state.errors[\"elink\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 141\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"post_answer\",\n            onClick: () => this.handlePost(),\n            children: \"Post Answer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            id: \"required1\",\n            children: \"*indicates mandatory fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this);\n  }\n}\nexport default AnswerForm;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","AnswerForm","Component","constructor","props","handleText","e","setState","text","target","value","validateEmpty","field","err","label","trim","validateHyperlink","link","check","exec","console","log","test","bind","handleUser","handlePost","state","ansBy","ansDate","Date","errors","a","b","c","answer","ans_by","comments","question","currQuestion","url","post","then","response","updatePage","updateAnswers","onQuestion","data","catch","error","render","children","id","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","name","onClick"],"sources":["/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/AnswerForm.js"],"sourcesContent":["import '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\n\nclass AnswerForm extends React.Component{\n  constructor(props){\n    super(props);\n    this.handleText = this.handleText.bind(this);\n    this.handleUser = this.handleUser.bind(this);\n    this.handlePost = this.handlePost.bind(this);\n    this.validateEmpty=this.validateEmpty.bind(this);\n    this.validateHyperlink=this.validateHyperlink.bind(this);\n    this.state = {\n      text: '',\n      ansBy: '',\n      ansDate: new Date(),\n      errors:{}\n    };\n  }\n  handleText = (e) =>{\n    this.setState({text:e.target.value});\n  }\n  handlePost(){\n    const ansBy = this.state.ansBy;\n    const text = this.state.text;\n    let err={};\n    let a = this.validateEmpty(ansBy, err, \"eansBy\");\n    let b = this.validateEmpty(text, err, \"etext\");\n    let c = this.validateHyperlink(text, err, \"elink\");\n    this.setState({errors:err});\n    if(!a && !b && !c){\n      const answer={ \n        text: text,\n        ans_by: ansBy,\n        ansDate: new Date(),\n        comments:[],\n      };\n    //add the answer to the current questions' answers\n    const question = this.props.currQuestion.url\n    axios.post(`http://localhost:8000/addAnswer/${question}`, answer)\n    .then(response => {\n        this.props.updatePage(\"answer_page\");\n        this.props.updateAnswers();\n        this.props.onQuestion(response.data);\n    })\n    .catch(error => {\n      console.error('Error creating answer:', error);\n    });\n  }\n}\n  validateEmpty = (field, err, label)=>{\n    field=field.trim();\n    if(field===\"\"){\n      err[label]= \"^Please fill out this field\";\n      return true;\n  }\n  return false;\n}\nvalidateHyperlink = (text, err, label) =>{\n  let link = /\\[(.*?)\\]\\((.*?)\\)/g; //[...](...)\n  let check;\n  while((check = link.exec(text))!==null){\n    if(check[1]==='' || check[2]===''){\n      console.log(\"NOT ALLOWED\");\n      err[label] = \"^Neither the name nor link can be empty\";\n      return true;\n    }\n    if(!/^https?:\\/\\//.test(check[2])){\n      console.log(\"NOT ALLOWED\");\n      err[label] = \"^A hyperlink must begin with http:// or https://\";\n      return true;\n    }\n  }\n  return false;\n}\n  render() {\n    return(\n    <div>\n      <div id=\"answer_form\" className=\"ans_form\">\n        <form>\n          <label htmlFor = \"a_textbox\" className=\"labels\" id=\"six\"> Answer Text<sup>*</sup></label><br></br>\n          <textarea type=\"text\" value={this.state.text} onChange={this.handleText} id = \"a_textbox\" name=\"a_textbox\"></textarea><br></br>\n          <span htmlFor=\"error6\" className='error' id=\"error6\" name=\"error6\">{this.state.errors[\"etext\"]}{this.state.errors[\"elink\"]}</span><br></br>\n          <button type=\"button\" id=\"post_answer\" onClick={() => this.handlePost()}>Post Answer</button>\n          <label id=\"required1\">*indicates mandatory fields</label>\n        </form>\n    </div>\n  </div>\n    );\n  }\n}\n\nexport default AnswerForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}