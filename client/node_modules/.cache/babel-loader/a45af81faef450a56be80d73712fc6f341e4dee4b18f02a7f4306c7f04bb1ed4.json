{"ast":null,"code":"var _jsxFileName = \"/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/QuestionTable.js\";\nimport '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuestionTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtons = status => {\n      if (status === 'active') {\n        console.log(\"you clicked on active\");\n        let newSort = this.active();\n        console.log(\"Active:\", newSort);\n        this.setState({\n          current: 0\n        });\n        this.props.updatePage(\"all_question\", newSort);\n      } else if (status === 'unanswered') {\n        console.log(\"you clicked on unanswered\");\n        let newSort = this.unanswered();\n        console.log(newSort);\n        this.setState({\n          current: 0\n        });\n        this.props.updatePage(\"all_question\", newSort);\n      } else if (status === 'newest') {\n        console.log(\"you clicked on newest\");\n        console.log(this.props.currPage);\n        let newSort = this.props.questions;\n        console.log(newSort);\n        this.setState({\n          current: 0\n        });\n        this.props.updatePage(\"all_question\", newSort);\n      }\n    };\n    this.handlePrev = () => {\n      if (this.state.current !== 0) {\n        this.setState({\n          current: this.state.current - 1\n        });\n      }\n    };\n    this.handleNext = () => {\n      let questions = this.props.questions;\n      let number = Math.ceil(questions.length / 5);\n      console.log(number);\n      if (this.state.current === number - 1) {\n        this.setState({\n          current: 0\n        });\n      } else {\n        this.setState({\n          current: this.state.current + 1\n        });\n      }\n    };\n    this.state = {\n      getQs: [],\n      answers: [],\n      current: 0\n    };\n    console.log(\"constructed\");\n    this.handleButtons = this.handleButtons.bind(this);\n    this.unanswered = this.unanswered.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrev = this.handlePrev.bind(this);\n  }\n  userQs() {\n    let questions = this.props.questions;\n    console.log(questions);\n    console.log(\"finding questions user asked\");\n    let userQs = [];\n    for (let i = 0; i < questions.length; i++) {\n      console.log(questions[i].asked_by.email + \" \" + this.props.user.email);\n      if (questions[i].asked_by.email === this.props.user.email) {\n        //display all questions user asked\n        userQs.push(questions[i]);\n      }\n    }\n    console.log(userQs);\n    return userQs;\n  }\n  userAs() {\n    let questions = this.props.questions;\n    console.log(questions);\n    console.log(\"finding questions user answered\");\n    let userAs = [];\n    for (let i = 0; i < questions.length; i++) {\n      for (let j = 0; j < questions[i].answers.length; j++) {\n        if (questions[i].answers[j].ans_by.email === this.props.user.email) {\n          userAs.push(questions[i]);\n        }\n      }\n    }\n    return userAs;\n  }\n  componentDidMount() {\n    console.log(\"came into mounted\");\n    axios.get('http://localhost:8000/questions').then(response => {\n      console.log(response.data);\n      this.setState({\n        getQs: response.data.slice().sort(compareDates)\n      });\n    }).catch(error => {\n      console.error('Error fetching questions data:', error);\n    });\n    axios.get('http://localhost:8000/answers').then(response => {\n      console.log(response.data);\n      this.setState({\n        answers: response.data\n      });\n    }).catch(error => {\n      console.error('Error fetching answers data:', error);\n    });\n    console.log(\"finished\");\n  }\n  searchAssociated(id) {\n    //goes through each q and each answer to find the question with that id\n    let question_list = this.state.getQs;\n    console.log(question_list);\n    for (let i = 0; i < question_list.length; i++) {\n      let a = question_list[i].answers;\n      for (let j = 0; j < a.length; j++) {\n        if (a[j]._id === id) {\n          return question_list[i];\n        }\n      }\n    }\n  }\n  active() {\n    console.log(\"testing active\");\n    let an = this.props.questions.answers;\n    console.log(\"all the answers\");\n    console.log(an);\n    let ques = this.props.quest;\n    console.log(ques);\n    let sortedList = new Set();\n    let anList = an.slice().sort(this.compareAnsDate);\n    //go through the list of sorted answers and find the associated question\n    for (let i = 0; i < anList.length; i++) {\n      console.log(anList[i]._id + \" \" + anList[i].ans_by);\n      let c = this.searchAssociated(anList[i]._id);\n      if (c !== undefined) {\n        console.log(\"found match\");\n        sortedList.add(c);\n      }\n    }\n    sortedList = [...sortedList];\n    for (let i = ques.length - 1; i >= 0; i--) {\n      let found = false;\n      let curr_id = ques[i]._id;\n      for (let j = 0; j < sortedList.length; j++) {\n        if (sortedList[j]._id === curr_id) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        sortedList.push(ques[i]);\n      }\n    }\n    return sortedList;\n  }\n  compareAnsDate(x, y) {\n    return new Date(y.ans_date_time) - new Date(x.ans_date_time);\n  }\n  unanswered() {\n    let ques = this.props.questions;\n    let displaylist = [];\n    for (let i = 0; i < ques.length; i++) {\n      if (ques[i].answers.length === 0) {\n        displaylist.push(ques[i]);\n      }\n    }\n    console.log(displaylist);\n    return displaylist.slice().sort(compareDates);\n  }\n  render() {\n    let questions = null;\n    if (this.props.currPage === \"profile_page\") {\n      questions = this.userQs();\n    } else if (this.props.currPage === \"user_q_answers\") {\n      questions = this.userAs();\n    } else {\n      questions = this.props.questions;\n    }\n    let start = this.state.current * 5;\n    let end = Math.min(start + 5, questions.length);\n    questions = questions.slice(start, end);\n    const rows = [];\n    console.log(questions);\n    questions.forEach(question => {\n      console.log(question);\n      rows.push( /*#__PURE__*/_jsxDEV(QuestionRow, {\n        question: question,\n        updatePage: this.props.updatePage,\n        onQuestion: this.props.onQuestion,\n        handle: this.props.handle,\n        currPage: this.props.currPage,\n        updatePopulateForm: this.props.updatePopulateForm\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this));\n    });\n    if (rows.length === 0 && this.props.currPage !== \"search\") {\n      rows.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"not_found\",\n        children: \"No Questions Found\"\n      }, \"none\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 18\n      }, this));\n    } else if (rows.length === 0 && this.props.currPage === \"search\") {\n      rows.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"not_found\",\n        children: \"No Results Found\"\n      }, \"none\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 18\n      }, this));\n    }\n    let qhead = \"All Questions\";\n    let uinfo = null;\n    console.log(this.props.currPage);\n    if (this.props.currPage === \"search\") {\n      qhead = \"Search Results\";\n    }\n    if (this.props.currPage === \"profile_page\") {\n      qhead = this.props.user.username;\n      uinfo = \"Member for \" + this.props.handle(this.props.user.memberTime) + \", Reputation: \" + this.props.user.rep;\n    }\n    if (this.props.currPage === \"user_q_answers\") {\n      qhead = \"Questions answered by \" + this.props.user.username;\n    }\n    console.log(this.props.userType);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-table\",\n        id: \"all_questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"top_table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              id: \"top_row\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"first_row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"top\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    id: \"q_head\",\n                    children: qhead\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 15\n                  }, this), this.props.userType !== \"guest\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"ask_button\",\n                    onClick: () => this.props.updatePage('question_form'),\n                    children: \"Ask Question\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 13\n                }, this), this.props.userType !== \"guest\" && this.props.currPage === \"profile_page\" && /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"u_info\",\n                  children: uinfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: \"next\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"next_row\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  id: \"question_count\",\n                  children: questions.length > 1 ? questions.length + \" Questions\" : questions.length + \" Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 15\n                }, this), this.props.currPage === \"profile_page\" && /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"newest_button\",\n                    onClick: () => this.props.updatePage(\"user_tags\"),\n                    children: \"User Tags\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"newest_button\",\n                    onClick: () => this.props.updatePage(\"user_q_answers\"),\n                    children: \"User Answers\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"buttons_cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"newest_button\",\n                    onClick: () => this.handleButtons('newest'),\n                    children: \"Newest\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"active_button\",\n                    onClick: () => this.handleButtons('active'),\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"unanswered_button\",\n                    onClick: () => this.handleButtons('unanswered'),\n                    children: \"Unanswered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 7\n        }, this), rows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.questions.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttom_buttons\",\n          className: \"static\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"prev_button\",\n            onClick: () => this.handlePrev(),\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"next_button\",\n            onClick: () => this.handleNext(),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass QuestionRow extends React.Component {\n  createButtons() {\n    let buttons = [];\n    let tags = this.props.question.tags;\n    tags.forEach(ques => {\n      let curr = ques.name;\n      buttons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"tag_buttons\",\n        children: curr\n      }, curr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this);\n  }\n  updateViews() {\n    let question = this.props.question;\n    console.log(\"updating views\");\n    axios.post(`http://localhost:8000/${question.url}/views`).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.error('Error saving question:', error);\n    });\n  }\n  saveQuestion(q) {\n    if (this.props.currPage === \"profile_page\") {\n      this.props.updatePopulateForm(true);\n      this.props.onQuestion(q);\n      console.log(q);\n      this.props.updatePage('question_form');\n    } else if (this.props.currPage === \"user_q_answers\") {\n      this.props.updatePage('user_answers');\n      this.props.onQuestion(q);\n    } else {\n      this.updateViews();\n      this.props.updatePage('answer_page');\n      this.props.onQuestion(q);\n    }\n  }\n  render() {\n    const question = this.props.question;\n    console.log(question.asked_by);\n    console.log(question.ask_date_time);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"innertable\",\n      id: \"post_table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table_r1\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"summary\",\n            children: [question.votes, question.votes <= 1 ? \" vote\" : \" votes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 93\n            }, this), question.answers.length, question.answers.length <= 1 ? \" answer\" : \" answers\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 180\n            }, this), question.views, question.views <= 1 ? \" view\" : \" views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#question\",\n              onClick: () => this.saveQuestion(question),\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 121\n            }, this), this.createButtons()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"user_cell\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"u\",\n              children: question.asked_by.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"t\",\n              children: \"asked \" + this.props.handle(question.ask_date_time) + \" ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction compareDates(x, y) {\n  return new Date(y.ask_date_time) - new Date(x.ask_date_time);\n}\nexport default QuestionTable;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","QuestionTable","Component","constructor","props","handleButtons","status","console","log","newSort","active","setState","current","updatePage","unanswered","currPage","questions","handlePrev","state","handleNext","number","Math","ceil","length","getQs","answers","bind","userQs","i","asked_by","email","user","push","userAs","j","ans_by","componentDidMount","get","then","response","data","slice","sort","compareDates","catch","error","searchAssociated","id","question_list","a","_id","an","ques","quest","sortedList","Set","anList","compareAnsDate","c","undefined","add","found","curr_id","x","y","Date","ans_date_time","displaylist","render","start","end","min","rows","forEach","question","QuestionRow","onQuestion","handle","updatePopulateForm","fileName","_jsxFileName","lineNumber","columnNumber","className","children","qhead","uinfo","username","memberTime","rep","userType","type","onClick","createButtons","buttons","tags","curr","name","updateViews","post","url","saveQuestion","q","ask_date_time","votes","views","href","title"],"sources":["/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/QuestionTable.js"],"sourcesContent":["import '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\n\nclass QuestionTable extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {getQs:[] , answers:[], current:0};\n    console.log(\"constructed\");\n    this.handleButtons = this.handleButtons.bind(this);\n    this.unanswered= this.unanswered.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrev = this.handlePrev.bind(this);\n  }\n  userQs(){\n    let questions = this.props.questions;\n    console.log(questions);\n    console.log(\"finding questions user asked\");\n    let userQs = [];\n    for(let i=0; i<questions.length;i++){\n      console.log(questions[i].asked_by.email + \" \" + this.props.user.email);\n      if((questions[i].asked_by.email === this.props.user.email)){ //display all questions user asked\n        userQs.push(questions[i]);\n      }\n    }\n    console.log(userQs);\n    return userQs;\n  }\n  userAs(){\n    let questions = this.props.questions;\n    console.log(questions);\n    console.log(\"finding questions user answered\");\n    let userAs = [];\n    for(let i=0; i<questions.length;i++){\n      for(let j=0;j<questions[i].answers.length;j++){\n        if(questions[i].answers[j].ans_by.email === this.props.user.email){\n          userAs.push(questions[i]);\n        }\n      }\n    }\n    return userAs;\n  }\n  componentDidMount() {\n    console.log(\"came into mounted\");\n    axios.get('http://localhost:8000/questions')\n    .then(response => {\n        console.log(response.data);\n        this.setState({ getQs: response.data.slice().sort(compareDates) });    \n    })\n      .catch(error => {\n        console.error('Error fetching questions data:', error);\n    });\n    axios.get('http://localhost:8000/answers')\n    .then(response => {\n        console.log(response.data);\n        this.setState({ answers: response.data });\n    })\n      .catch(error => {\n        console.error('Error fetching answers data:', error);\n    });\n    console.log(\"finished\");\n  }\n\n  handleButtons = (status) => {\n    if(status==='active'){\n      console.log(\"you clicked on active\");\n      let newSort = this.active();\n      console.log(\"Active:\", newSort);\n      this.setState({current: 0 })\n      this.props.updatePage(\"all_question\", newSort);\n    }\n    else if(status==='unanswered'){\n      console.log(\"you clicked on unanswered\");\n      let newSort = this.unanswered();\n      console.log(newSort);\n      this.setState({current:0})\n      this.props.updatePage(\"all_question\", newSort);\n    }\n    else if(status==='newest'){\n      console.log(\"you clicked on newest\");\n      console.log(this.props.currPage);\n      let newSort = this.props.questions;\n      console.log(newSort);\n      this.setState({current: 0 })\n      this.props.updatePage(\"all_question\", newSort);\n    }\n  };\n  handlePrev=()=>{\n    if (this.state.current!== 0){\n      this.setState({current: this.state.current - 1})\n    }\n  }\n  handleNext=()=>{\n    let questions = this.props.questions;\n    let number = Math.ceil(questions.length / 5)\n    console.log(number)\n    if (this.state.current === number - 1){\n      this.setState({current: 0})\n    }\n    else{\n      this.setState({current: this.state.current + 1})\n    }\n  }\n  searchAssociated(id) { //goes through each q and each answer to find the question with that id\n    let question_list = this.state.getQs;\n    console.log(question_list);\n    for (let i = 0; i < question_list.length; i++) {\n        let a = question_list[i].answers;\n        for (let j = 0; j < a.length; j++) {\n            if ((a[j])._id === id) {\n                return question_list[i];\n            }\n        }\n    }\n  }\n  active(){\n    console.log(\"testing active\");\n    let an = this.props.questions.answers;\n    console.log(\"all the answers\");\n    console.log(an);\n    let ques = this.props.quest;\n    console.log(ques);\n    let sortedList= new Set();\n    let anList=an.slice().sort(this.compareAnsDate);\n    //go through the list of sorted answers and find the associated question\n    for(let i =0; i<anList.length; i++)\n    {\n        console.log(anList[i]._id +\" \"+ anList[i].ans_by);\n        let c=this.searchAssociated(anList[i]._id);\n        if(c!==undefined)\n        {\n          console.log(\"found match\");\n            sortedList.add(c);\n        }\n    }\n    sortedList=[...sortedList];\n      for(let i=ques.length-1; i >= 0; i--){\n        let found=false;\n        let curr_id=ques[i]._id;\n        for (let j=0; j<sortedList.length; j++){\n          if (sortedList[j]._id===curr_id){\n            found=true;\n            break;\n          }\n        }\n        if (!found){\n          sortedList.push(ques[i]);\n        }\n      }\n    return sortedList;\n  }\n  compareAnsDate(x, y){\n    return new Date(y.ans_date_time) - new Date(x.ans_date_time);\n  }\n  unanswered(){\n    let ques=this.props.questions;\n    let displaylist=[];\n    for(let i=0; i<ques.length; i++){\n        if(ques[i].answers.length===0){\n            displaylist.push(ques[i]);\n        }\n    }\n    console.log(displaylist);\n    return displaylist.slice().sort(compareDates);\n  }\n  render() {\n    let questions = null;\n    if(this.props.currPage === \"profile_page\"){\n      questions = this.userQs();\n    }\n    else if(this.props.currPage===\"user_q_answers\"){\n      questions = this.userAs();\n    }\n    else{\n      questions = this.props.questions;\n    }\n    let start = this.state.current * 5;\n    let end = Math.min(start + 5, questions.length);\n    questions = questions.slice(start, end)\n    const rows = [];\n    console.log(questions);\n    questions.forEach((question) => {\n      console.log(question);\n      rows.push(\n        <QuestionRow\n          question={question}\n          key={question._id}\n          updatePage={this.props.updatePage}\n          onQuestion={this.props.onQuestion}\n          handle = {this.props.handle}\n          currPage = {this.props.currPage} updatePopulateForm={this.props.updatePopulateForm}\n         /> \n      );\n    });\n    if(rows.length===0 && this.props.currPage !== \"search\"){\n      rows.push( <h3 key =\"none\" className=\"not_found\">No Questions Found</h3>)\n    }\n    else if (rows.length===0 && this.props.currPage === \"search\"){\n      rows.push( <h3 key =\"none\" className=\"not_found\">No Results Found</h3>)\n    }\n    let qhead=\"All Questions\";\n    let uinfo = null;\n    console.log(this.props.currPage);\n    if(this.props.currPage === \"search\"){\n        qhead = \"Search Results\";\n    }\n    if(this.props.currPage === \"profile_page\"){\n        qhead = this.props.user.username;\n        uinfo = \"Member for \" + this.props.handle(this.props.user.memberTime) +  \", Reputation: \" + this.props.user.rep;\n    }\n    if(this.props.currPage === \"user_q_answers\"){\n      qhead = \"Questions answered by \" + this.props.user.username;\n    }\n    console.log(this.props.userType);\n    return (\n      <div>\n      <div className=\"main-table\" id=\"all_questions\">\n      <table id=\"top_table\">\n        <tbody>\n          <tr id=\"top_row\">\n          <td id=\"first_row\">\n            <div id=\"top\">\n              <h3 id=\"q_head\">{qhead}</h3>\n              {this.props.userType !== \"guest\" && (\n              <button type=\"button\" id =\"ask_button\" onClick={() => this.props.updatePage('question_form')}>Ask Question</button>\n              )}\n            </div>\n            {(this.props.userType !== \"guest\" && this.props.currPage===\"profile_page\") && (\n              <p id=\"u_info\">{uinfo}</p>\n              )}\n            </td>\n          </tr>\n          <tr id=\"next\">\n            <td id=\"next_row\">\n              <h5 id=\"question_count\">{questions.length > 1 ? questions.length + \" Questions\": questions.length + \" Question\"}</h5>\n              {this.props.currPage === \"profile_page\" && (\n                <div>\n                  <button type=\"button\" id=\"newest_button\" onClick={() => this.props.updatePage(\"user_tags\")}>User Tags</button>\n                  <button type=\"button\" id=\"newest_button\" onClick={() => this.props.updatePage(\"user_q_answers\")}>User Answers</button>\n                </div>\n              )}\n              <div id=\"buttons_cell\">\n                  <button type=\"button\" id=\"newest_button\" onClick={() => this.handleButtons('newest')}>Newest</button>\n                  <button type=\"button\" id=\"active_button\" onClick={() => this.handleButtons('active')}>Active</button>\n                  <button type=\"button\" id=\"unanswered_button\" onClick={() => this.handleButtons('unanswered')}>Unanswered</button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {rows}\n      </div>\n      <div>\n      {this.props.questions.length > 5 && (\n          <div id=\"buttom_buttons\" className= \"static\">\n              <button type=\"button\" id=\"prev_button\" onClick={() => this.handlePrev()}>Prev</button>\n              <button type=\"button\" id=\"next_button\" onClick={() => this.handleNext()}>Next</button>\n          </div>\n      )}\n      </div>\n      </div>\n    );\n  }\n}\nclass QuestionRow extends React.Component {\n  createButtons(){\n    let buttons=[]\n    let tags = this.props.question.tags;\n    tags.forEach(ques=>{\n         let curr= ques.name;\n         buttons.push(<button type=\"button\" key={curr} className= \"tag_buttons\">{curr}</button>);\n      });\n    return (\n        <div>\n          {buttons}\n        </div>\n    )\n  }\n  updateViews(){\n    let question = this.props.question;\n    console.log(\"updating views\");\n    axios.post(`http://localhost:8000/${question.url}/views`)\n    .then(response => {\n        console.log(response);\n    })\n    .catch(error => {\n        console.error('Error saving question:', error);\n    });\n  }\n  saveQuestion(q){\n    if(this.props.currPage === \"profile_page\"){\n      this.props.updatePopulateForm(true);\n      this.props.onQuestion(q);\n      console.log(q);\n      this.props.updatePage('question_form');\n    }\n    else if(this.props.currPage === \"user_q_answers\"){\n      this.props.updatePage('user_answers');\n      this.props.onQuestion(q);\n    }\n    else{\n      this.updateViews();\n      this.props.updatePage('answer_page');\n      this.props.onQuestion(q);\n    }\n  }\n  render() {\n    const question = this.props.question;\n    console.log(question.asked_by);\n    console.log(question.ask_date_time)\n    return (\n      <table className=\"innertable\" id=\"post_table\">\n        <tbody>\n          <tr className=\"table_r1\">\n            <td className=\"summary\">{question.votes}{question.votes<=1 ? \" vote\" : \" votes\"}<br></br>{question.answers.length}{question.answers.length<=1 ? \" answer\" : \" answers\"}<br></br>{question.views}{question.views<=1 ? \" view\" : \" views\"}</td>\n            <td className=\"question\"><a href= \"#question\" onClick={()=>this.saveQuestion(question)}>{question.title}</a><br></br>\n             {this.createButtons()}\n            </td>\n            <td className=\"user_cell\">\n            <p className=\"u\">{question.asked_by.username}</p>\n            <p className=\"t\">{\"asked \" + this.props.handle(question.ask_date_time) + \" ago\"}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\nfunction compareDates(x, y){\n  return new Date(y.ask_date_time) - new Date(x.ask_date_time);\n}\n\nexport default QuestionTable;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}