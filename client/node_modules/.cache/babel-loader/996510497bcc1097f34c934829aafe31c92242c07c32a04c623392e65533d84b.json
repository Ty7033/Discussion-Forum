{"ast":null,"code":"var _jsxFileName = \"/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/QuestionTable.js\";\nimport '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuestionTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtons = status => {\n      if (status === 'active') {\n        console.log(\"you clicked on active\");\n        let newSort = this.active();\n        console.log(\"Active:\", newSort);\n        this.setState({\n          current: 0,\n          questions: newSort\n        });\n      } else if (status === 'unanswered') {\n        console.log(\"you clicked on unanswered\");\n        let newSort = this.unanswered();\n        console.log(newSort);\n        this.setState({\n          current: 0,\n          questions: newSort\n        });\n      } else if (status === 'newest') {\n        console.log(\"you clicked on newest\");\n        console.log(this.props.currPage);\n        let newSort = this.props.questions;\n        console.log(newSort);\n        this.setState({\n          current: 0,\n          questions: newSort\n        });\n      }\n    };\n    this.handlePrev = () => {\n      if (this.state.current !== 0) {\n        this.setState({\n          current: this.state.current - 1\n        });\n      }\n    };\n    this.handleNext = () => {\n      let questions = this.props.questions;\n      let number = Math.ceil(questions.length / 5);\n      console.log(number);\n      if (this.state.current === number - 1) {\n        this.setState({\n          current: 0\n        });\n      } else {\n        this.setState({\n          current: this.state.current + 1\n        });\n      }\n    };\n    this.state = {\n      getQs: [],\n      answers: [],\n      current: 0,\n      questions: this.props.questions\n    };\n    console.log(\"constructed\");\n    this.handleButtons = this.handleButtons.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrev = this.handlePrev.bind(this);\n  }\n  componentDidUpdate(prev) {\n    if (this.props.questions !== prev.questions) {\n      this.setState({\n        questions: this.props.questions\n      });\n    }\n  }\n  componentDidMount() {\n    console.log(\"came into mounted\");\n    axios.get('http://localhost:8000/questions').then(response => {\n      console.log(response.data);\n      this.setState({\n        getQs: response.data.slice().sort(compareDates)\n      });\n    }).catch(error => {\n      this.props.setErr('Error fetching questions data');\n    });\n    axios.get('http://localhost:8000/answers').then(response => {\n      console.log(response.data);\n      this.setState({\n        answers: response.data\n      });\n    }).catch(error => {\n      this.props.setErr('Error fetching answers data:');\n    });\n    console.log(\"finished\");\n  }\n  searchAssociated(id) {\n    //goes through each q and each answer to find the question with that id\n    let question_list = this.state.getQs;\n    console.log(question_list);\n    for (let i = 0; i < question_list.length; i++) {\n      let a = question_list[i].answers;\n      for (let j = 0; j < a.length; j++) {\n        if (a[j]._id === id) {\n          return question_list[i];\n        }\n      }\n    }\n  }\n  active() {\n    console.log(\"testing active\");\n    console.log(this.props.questions);\n    const allAnswers = [];\n    this.props.questions.forEach(question => {\n      if (question.answers && question.answers.length > 0) {\n        allAnswers.push(...question.answers);\n      }\n    });\n    console.log(\"all the answers\");\n    let ques = this.props.questions;\n    console.log(ques);\n    let sortedList = new Set();\n    let anList = allAnswers.slice().sort(this.compareAnsDate);\n    //go through the list of sorted answers and find the associated question\n    for (let i = 0; i < anList.length; i++) {\n      console.log(anList[i]._id + \" \" + anList[i].ans_by);\n      let c = this.searchAssociated(anList[i]._id);\n      if (c !== undefined) {\n        console.log(\"found match\");\n        sortedList.add(c);\n      }\n    }\n    sortedList = [...sortedList];\n    for (let i = ques.length - 1; i >= 0; i--) {\n      let found = false;\n      let curr_id = ques[i]._id;\n      for (let j = 0; j < sortedList.length; j++) {\n        if (sortedList[j]._id === curr_id) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        sortedList.push(ques[i]);\n      }\n    }\n    return sortedList;\n  }\n  compareAnsDate(x, y) {\n    return new Date(y.ans_date_time) - new Date(x.ans_date_time);\n  }\n  unanswered() {\n    let ques = this.props.questions;\n    let displaylist = [];\n    for (let i = 0; i < ques.length; i++) {\n      if (ques[i].answers.length === 0) {\n        displaylist.push(ques[i]);\n      }\n    }\n    console.log(displaylist);\n    return displaylist.slice().sort(compareDates);\n  }\n  render() {\n    let questions = this.state.questions;\n    let c;\n    let start = this.state.current * 5;\n    let end = Math.min(start + 5, questions.length);\n    questions = questions.slice(start, end);\n    const rows = [];\n    console.log(questions);\n    questions.forEach(question => {\n      console.log(question);\n      rows.push( /*#__PURE__*/_jsxDEV(QuestionRow, {\n        question: question,\n        updatePage: this.props.updatePage,\n        onQuestion: this.props.onQuestion,\n        handle: this.props.handle,\n        setErr: this.props.setErr,\n        currPage: this.props.currPage,\n        updatePopulateForm: this.props.updatePopulateForm\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this));\n    });\n    if (rows.length === 0 && this.props.currPage !== \"search\") {\n      rows.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"not_found\",\n        children: \"No Questions Found\"\n      }, \"none\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 18\n      }, this));\n    } else if (rows.length === 0 && this.props.currPage === \"search\") {\n      rows.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"not_found\",\n        children: \"No Results Found\"\n      }, \"none\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 18\n      }, this));\n    }\n    let qhead = \"All Questions\";\n    console.log(this.props.currPage);\n    if (this.props.currPage === \"search\") {\n      qhead = \"Search Results\";\n    }\n    console.log(this.props.userType);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-table\",\n        id: \"all_questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"top_table\",\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              id: \"top_row\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"first_row\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"top\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    id: \"q_head\",\n                    children: qhead\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 15\n                  }, this), this.props.userType !== \"guest\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"ask_button\",\n                    onClick: () => this.props.updatePage('question_form'),\n                    children: \"Ask Question\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 13\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              id: \"next\",\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                id: \"next_row\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  id: \"question_count\",\n                  children: questions.length > 1 ? questions.length + \" Questions\" : questions.length + \" Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: \"buttons_cell\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"newest_button\",\n                    onClick: () => this.handleButtons('newest'),\n                    children: \"Newest\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"active_button\",\n                    onClick: () => this.handleButtons('active'),\n                    children: \"Active\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    id: \"unanswered_button\",\n                    onClick: () => this.handleButtons('unanswered'),\n                    children: \"Unanswered\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 7\n        }, this), rows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.props.questions.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"buttom_buttons\",\n          className: \"static\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"prev_button\",\n            onClick: () => this.handlePrev(),\n            children: \"Prev\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            id: \"next_button\",\n            onClick: () => this.handleNext(),\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass QuestionRow extends React.Component {\n  createButtons() {\n    let buttons = [];\n    let tags = this.props.question.tags;\n    tags.forEach(ques => {\n      let curr = ques.name;\n      buttons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"tag_buttons\",\n        children: curr\n      }, curr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 23\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }, this);\n  }\n  updateViews() {\n    let question = this.props.question;\n    console.log(\"updating views\");\n    axios.post(`http://localhost:8000/posts/question/${question._id}/views`).then(response => {\n      console.log(response.data);\n      this.props.updatePage('answer_page');\n      this.props.onQuestion(response.data);\n    }).catch(error => {\n      this.props.setErr('Error updating views');\n    });\n  }\n  render() {\n    const question = this.props.question;\n    console.log(question.asked_by);\n    console.log(question.ask_date_time);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"innertable\",\n      id: \"post_table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table_r1\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"summary\",\n            children: [question.votes, question.votes <= 1 ? \" vote\" : \" votes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 93\n            }, this), question.answers.length, question.answers.length <= 1 ? \" answer\" : \" answers\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 180\n            }, this), question.views, question.views <= 1 ? \" view\" : \" views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#question\",\n              onClick: () => this.updateViews(),\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 112\n            }, this), this.createButtons()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"user_cell\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"u\",\n              children: question.asked_by.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"t\",\n              children: \"asked \" + this.props.handle(question.ask_date_time) + \" ago\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction compareDates(x, y) {\n  return new Date(y.ask_date_time) - new Date(x.ask_date_time);\n}\nexport default QuestionTable;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","QuestionTable","Component","constructor","props","handleButtons","status","console","log","newSort","active","setState","current","questions","unanswered","currPage","handlePrev","state","handleNext","number","Math","ceil","length","getQs","answers","bind","componentDidUpdate","prev","componentDidMount","get","then","response","data","slice","sort","compareDates","catch","error","setErr","searchAssociated","id","question_list","i","a","j","_id","allAnswers","forEach","question","push","ques","sortedList","Set","anList","compareAnsDate","ans_by","c","undefined","add","found","curr_id","x","y","Date","ans_date_time","displaylist","render","start","end","min","rows","QuestionRow","updatePage","onQuestion","handle","updatePopulateForm","fileName","_jsxFileName","lineNumber","columnNumber","className","children","qhead","userType","type","onClick","createButtons","buttons","tags","curr","name","updateViews","post","asked_by","ask_date_time","votes","views","href","title","username"],"sources":["/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/QuestionTable.js"],"sourcesContent":["import '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\n\nclass QuestionTable extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {getQs:[] , answers:[], current:0, questions: this.props.questions};\n    console.log(\"constructed\");\n    this.handleButtons = this.handleButtons.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrev = this.handlePrev.bind(this);\n  }\n  componentDidUpdate(prev) {\n    if (this.props.questions !== prev.questions) {\n      this.setState({questions: this.props.questions});\n    }\n  }\n  componentDidMount() {\n    console.log(\"came into mounted\");\n    axios.get('http://localhost:8000/questions')\n    .then(response => {\n        console.log(response.data);\n        this.setState({ getQs: response.data.slice().sort(compareDates) });    \n    })\n      .catch(error => {\n        this.props.setErr('Error fetching questions data');\n    });\n    axios.get('http://localhost:8000/answers')\n    .then(response => {\n        console.log(response.data);\n        this.setState({ answers: response.data });\n    })\n      .catch(error => {\n        this.props.setErr('Error fetching answers data:');\n    });\n    console.log(\"finished\");\n  }\n\n  handleButtons = (status) => {\n    if(status==='active'){\n      console.log(\"you clicked on active\");\n      let newSort = this.active();\n      console.log(\"Active:\", newSort);\n      this.setState({current: 0, questions:newSort})\n    }\n    else if(status==='unanswered'){\n      console.log(\"you clicked on unanswered\");\n      let newSort = this.unanswered();\n      console.log(newSort);\n      this.setState({current: 0, questions:newSort})\n    }\n    else if(status==='newest'){\n      console.log(\"you clicked on newest\");\n      console.log(this.props.currPage);\n      let newSort = this.props.questions;\n      console.log(newSort);\n      this.setState({current: 0, questions:newSort})\n    }\n  };\n  handlePrev=()=>{\n    if (this.state.current!== 0){\n      this.setState({current: this.state.current - 1})\n    }\n  }\n  handleNext=()=>{\n    let questions = this.props.questions;\n    let number = Math.ceil(questions.length / 5)\n    console.log(number)\n    if (this.state.current === number - 1){\n      this.setState({current: 0})\n    }\n    else{\n      this.setState({current: this.state.current + 1})\n    }\n  }\n  searchAssociated(id) { //goes through each q and each answer to find the question with that id\n    let question_list = this.state.getQs;\n    console.log(question_list);\n    for (let i = 0; i < question_list.length; i++) {\n        let a = question_list[i].answers;\n        for (let j = 0; j < a.length; j++) {\n            if ((a[j])._id === id) {\n                return question_list[i];\n            }\n        }\n    }\n  }\n  active(){\n    console.log(\"testing active\");\n    console.log(this.props.questions);\n    const allAnswers = [];\n    this.props.questions.forEach(question => {\n    if (question.answers && question.answers.length > 0) {\n        allAnswers.push(...question.answers);\n    }\n   });\n    console.log(\"all the answers\");\n    let ques = this.props.questions;\n    console.log(ques);\n    let sortedList= new Set();\n    let anList=allAnswers.slice().sort(this.compareAnsDate);\n    //go through the list of sorted answers and find the associated question\n    for(let i =0; i<anList.length; i++)\n    {\n        console.log(anList[i]._id +\" \"+ anList[i].ans_by);\n        let c=this.searchAssociated(anList[i]._id);\n        if(c!==undefined)\n        {\n          console.log(\"found match\");\n            sortedList.add(c);\n        }\n    }\n    sortedList=[...sortedList];\n      for(let i=ques.length-1; i >= 0; i--){\n        let found=false;\n        let curr_id=ques[i]._id;\n        for (let j=0; j<sortedList.length; j++){\n          if (sortedList[j]._id===curr_id){\n            found=true;\n            break;\n          }\n        }\n        if (!found){\n          sortedList.push(ques[i]);\n        }\n      }\n    return sortedList;\n  }\n  compareAnsDate(x, y){\n    return new Date(y.ans_date_time) - new Date(x.ans_date_time);\n  }\n  unanswered(){\n    let ques=this.props.questions;\n    let displaylist=[];\n    for(let i=0; i<ques.length; i++){\n        if(ques[i].answers.length===0){\n            displaylist.push(ques[i]);\n        }\n    }\n    console.log(displaylist);\n    return displaylist.slice().sort(compareDates);\n  }\n  render() {\n    let questions = this.state.questions;\n    let c\n    let start = this.state.current * 5;\n    let end = Math.min(start + 5, questions.length);\n    questions = questions.slice(start, end)\n    const rows = [];\n    console.log(questions);\n    questions.forEach((question) => {\n      console.log(question);\n      rows.push(\n        <QuestionRow\n          question={question}\n          key={question._id}\n          updatePage={this.props.updatePage}\n          onQuestion={this.props.onQuestion}\n          handle = {this.props.handle}\n          setErr={this.props.setErr}\n          currPage = {this.props.currPage} updatePopulateForm={this.props.updatePopulateForm}\n         /> \n      );\n    });\n    if(rows.length===0 && this.props.currPage !== \"search\"){\n      rows.push( <h3 key =\"none\" className=\"not_found\">No Questions Found</h3>)\n    }\n    else if (rows.length===0 && this.props.currPage === \"search\"){\n      rows.push( <h3 key =\"none\" className=\"not_found\">No Results Found</h3>)\n    }\n    let qhead=\"All Questions\";\n    console.log(this.props.currPage);\n    if(this.props.currPage === \"search\"){\n        qhead = \"Search Results\";\n    }\n    console.log(this.props.userType);\n    return (\n      <div>\n      <div className=\"main-table\" id=\"all_questions\">\n      <table id=\"top_table\">\n        <tbody>\n          <tr id=\"top_row\">\n          <td id=\"first_row\">\n            <div id=\"top\">\n              <h3 id=\"q_head\">{qhead}</h3>\n              {this.props.userType !== \"guest\" && (\n              <button type=\"button\" id =\"ask_button\" onClick={() => this.props.updatePage('question_form')}>Ask Question</button>\n              )}\n            </div>\n            </td>\n          </tr>\n          <tr id=\"next\">\n            <td id=\"next_row\">\n              <h5 id=\"question_count\">{questions.length > 1 ? questions.length + \" Questions\": questions.length + \" Question\"}</h5>\n              <div id=\"buttons_cell\">\n                  <button type=\"button\" id=\"newest_button\" onClick={() => this.handleButtons('newest')}>Newest</button>\n                  <button type=\"button\" id=\"active_button\" onClick={() => this.handleButtons('active')}>Active</button>\n                  <button type=\"button\" id=\"unanswered_button\" onClick={() => this.handleButtons('unanswered')}>Unanswered</button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {rows}\n      </div>\n      <div>\n      {this.props.questions.length > 5 && (\n          <div id=\"buttom_buttons\" className= \"static\">\n              <button type=\"button\" id=\"prev_button\" onClick={() => this.handlePrev()}>Prev</button>\n              <button type=\"button\" id=\"next_button\" onClick={() => this.handleNext()}>Next</button>\n          </div>\n      )}\n      </div>\n      </div>\n    );\n  }\n}\nclass QuestionRow extends React.Component {\n  createButtons(){\n    let buttons=[]\n    let tags = this.props.question.tags;\n    tags.forEach(ques=>{\n         let curr= ques.name;\n         buttons.push(<button type=\"button\" key={curr} className= \"tag_buttons\">{curr}</button>);\n      });\n    return (\n        <div>\n          {buttons}\n        </div>\n    )\n  }\n updateViews(){\n    let question = this.props.question;\n    console.log(\"updating views\");\n    axios.post(`http://localhost:8000/posts/question/${question._id}/views`)\n    .then(response => {\n      console.log(response.data)\n      this.props.updatePage('answer_page');\n      this.props.onQuestion(response.data);\n    })\n    .catch(error => {\n      this.props.setErr('Error updating views');\n    });\n  }\n  render() {\n    const question = this.props.question;\n    console.log(question.asked_by);\n    console.log(question.ask_date_time)\n    return (\n      <table className=\"innertable\" id=\"post_table\">\n        <tbody>\n          <tr className=\"table_r1\">\n            <td className=\"summary\">{question.votes}{question.votes<=1 ? \" vote\" : \" votes\"}<br></br>{question.answers.length}{question.answers.length<=1 ? \" answer\" : \" answers\"}<br></br>{question.views}{question.views<=1 ? \" view\" : \" views\"}</td>\n            <td className=\"question\"><a href= \"#question\" onClick={()=>this.updateViews()}>{question.title}</a><br></br>\n             {this.createButtons()}\n            </td>\n            <td className=\"user_cell\">\n            <p className=\"u\">{question.asked_by.username}</p>\n            <p className=\"t\">{\"asked \" + this.props.handle(question.ask_date_time) + \" ago\"}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\nfunction compareDates(x, y){\n  return new Date(y.ask_date_time) - new Date(x.ask_date_time);\n}\n\nexport default QuestionTable;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}