{"ast":null,"code":"var _jsxFileName = \"/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/QuestionTable.js\";\nimport '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass QuestionTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleButtons = status => {\n      if (status === 'active') {\n        console.log(\"you clicked on active\");\n        let newSort = this.active();\n        console.log(\"Active:\", newSort);\n        this.props.updatePage(\"all_question\", newSort);\n      } else if (status === 'unanswered') {\n        console.log(\"you clicked on unanswered\");\n        let newSort = this.unanswered();\n        console.log(newSort);\n        this.props.updatePage(\"all_question\", newSort);\n      } else if (status === 'newest') {\n        console.log(\"you clicked on newest\");\n        console.log(this.props.currPage);\n        let newSort = this.state.getQs;\n        console.log(newSort);\n        this.props.updatePage(\"all_question\", newSort);\n      }\n    };\n    this.handlePrev = () => {\n      const startIndex = this.state.current * 5;\n      const endIndex = Math.min(startIndex + 5, this.state.questions.length);\n      this.setState({\n        questions: this.props.questions.slice(startIndex, endIndex)\n      });\n    };\n    this.handleNext = () => {};\n    this.state = {\n      getQs: [],\n      answers: [],\n      current: 0,\n      questions: this.props.questions\n    };\n    console.log(\"constructed\");\n    this.handleButtons = this.handleButtons.bind(this);\n    this.unanswered = this.unanswered.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrev = this.handlePrev.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"came into mounted\");\n    axios.get('http://localhost:8000/questions').then(response => {\n      console.log(response.data);\n      this.setState({\n        getQs: response.data.slice().sort(compareDates)\n      });\n    }).catch(error => {\n      console.error('Error fetching questions data:', error);\n    });\n    axios.get('http://localhost:8000/answers').then(response => {\n      console.log(response.data);\n      this.setState({\n        answers: response.data\n      });\n    }).catch(error => {\n      console.error('Error fetching answers data:', error);\n    });\n    console.log(\"finished\");\n  }\n  searchAssociated(id) {\n    //goes through each q and each answer to find the question with that id\n    let question_list = this.state.getQs;\n    console.log(question_list);\n    for (let i = 0; i < question_list.length; i++) {\n      let a = question_list[i].answers;\n      for (let j = 0; j < a.length; j++) {\n        if (a[j]._id === id) {\n          return question_list[i];\n        }\n      }\n    }\n  }\n  active() {\n    console.log(\"testing active\");\n    let an = this.state.answers;\n    console.log(\"all the answers\");\n    console.log(an);\n    let ques = this.state.getQs;\n    console.log(ques);\n    let sortedList = new Set();\n    let anList = an.slice().sort(this.compareAnsDate);\n    //go through the list of sorted answers and find the associated question\n    for (let i = 0; i < anList.length; i++) {\n      console.log(anList[i]._id + \" \" + anList[i].ans_by);\n      let c = this.searchAssociated(anList[i]._id);\n      if (c !== undefined) {\n        console.log(\"found match\");\n        sortedList.add(c);\n      }\n    }\n    sortedList = [...sortedList];\n    for (let i = ques.length - 1; i >= 0; i--) {\n      let found = false;\n      let curr_id = ques[i]._id;\n      for (let j = 0; j < sortedList.length; j++) {\n        if (sortedList[j]._id === curr_id) {\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        sortedList.push(ques[i]);\n      }\n    }\n    return sortedList;\n  }\n  compareAnsDate(x, y) {\n    return new Date(y.ans_date_time) - new Date(x.ans_date_time);\n  }\n  unanswered() {\n    let ques = this.state.getQs;\n    let displaylist = [];\n    for (let i = 0; i < ques.length; i++) {\n      if (ques[i].answers.length === 0) {\n        displaylist.push(ques[i]);\n      }\n    }\n    console.log(displaylist);\n    return displaylist.slice().sort(compareDates);\n  }\n  render() {\n    let questions = this.props.questions;\n    const startIndex = this.state.current * 5;\n    const endIndex = Math.min(startIndex + 5, quesi.length);\n    questions = questions.slice(startIndex, endIndex);\n    const rows = [];\n    console.log(questions);\n    questions.forEach(question => {\n      console.log(question);\n      rows.push( /*#__PURE__*/_jsxDEV(QuestionRow, {\n        question: question,\n        updatePage: this.props.updatePage,\n        onQuestion: this.props.onQuestion,\n        handle: this.props.handle\n      }, question._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this));\n    });\n    if (rows.length === 0) {\n      rows.push( /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"not_found\",\n        children: \"No Questions Found\"\n      }, \"none\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 18\n      }, this));\n    }\n    let qhead = \"All Questions\";\n    if (this.props.currPage === \"search\") {\n      qhead = \"Search Results\";\n    }\n    console.log(this.props.userType);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-table\",\n      id: \"all_questions\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        id: \"top_table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            id: \"top_row\",\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"first_row\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"top\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  id: \"q_head\",\n                  children: qhead\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 15\n                }, this), this.props.userType !== \"guest\" && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  id: \"ask_button\",\n                  onClick: () => this.props.updatePage('question_form'),\n                  children: \"Ask Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            id: \"next\",\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              id: \"next_row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                id: \"question_count\",\n                children: questions.length > 1 ? questions.length + \" Questions\" : questions.length + \" Question\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"buttons_cell\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  id: \"newest_button\",\n                  onClick: () => this.handleButtons('newest'),\n                  children: \"Newest\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  id: \"active_button\",\n                  onClick: () => this.handleButtons('active'),\n                  children: \"Active\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  id: \"unanswered_button\",\n                  onClick: () => this.handleButtons('unanswered'),\n                  children: \"Unanswered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 7\n      }, this), rows, rows.length > 5 && /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"buttom_buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"prev_button\",\n          onClick: () => this.handleButtons('newest'),\n          children: \"Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"next_button\",\n          onClick: () => this.handleButtons('active'),\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass QuestionRow extends React.Component {\n  createButtons() {\n    let buttons = [];\n    let tags = this.props.question.tags;\n    tags.forEach(ques => {\n      let curr = ques.name;\n      buttons.push( /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"tag_buttons\",\n        children: curr\n      }, curr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 23\n      }, this));\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: buttons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }, this);\n  }\n  saveQuestion(q) {\n    this.props.updatePage('answer_page');\n    this.props.onQuestion(q);\n  }\n  render() {\n    const question = this.props.question;\n    console.log(question.asked_by);\n    console.log(question.ask_date_time);\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"innertable\",\n      id: \"post_table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"table_r1\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"summary\",\n            children: [question.votes, question.votes <= 1 ? \" vote\" : \" votes\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 93\n            }, this), question.answers.length, question.answers.length <= 1 ? \" answer\" : \" answers\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 180\n            }, this), question.views, question.views <= 1 ? \" view\" : \" views\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#question\",\n              onClick: () => this.saveQuestion(question),\n              children: question.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 121\n            }, this), this.createButtons()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"user_cell\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"u\",\n              children: question.asked_by\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"t\",\n              children: \"asked \" + this.props.handle(question.ask_date_time)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction compareDates(x, y) {\n  return new Date(y.ask_date_time) - new Date(x.ask_date_time);\n}\nexport default QuestionTable;","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","QuestionTable","Component","constructor","props","handleButtons","status","console","log","newSort","active","updatePage","unanswered","currPage","state","getQs","handlePrev","startIndex","current","endIndex","Math","min","questions","length","setState","slice","handleNext","answers","bind","componentDidMount","get","then","response","data","sort","compareDates","catch","error","searchAssociated","id","question_list","i","a","j","_id","an","ques","sortedList","Set","anList","compareAnsDate","ans_by","c","undefined","add","found","curr_id","push","x","y","Date","ans_date_time","displaylist","render","quesi","rows","forEach","question","QuestionRow","onQuestion","handle","fileName","_jsxFileName","lineNumber","columnNumber","className","children","qhead","userType","type","onClick","createButtons","buttons","tags","curr","name","saveQuestion","q","asked_by","ask_date_time","votes","views","href","title"],"sources":["/Users/tracyyip/Desktop/pa04-webwizards/client/src/components/QuestionTable.js"],"sourcesContent":["import '../App.js';\nimport React from 'react';\nimport '../stylesheets/App.css';\nimport axios from 'axios';\n\nclass QuestionTable extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {getQs:[] , answers:[], current:0, questions: this.props.questions};\n    console.log(\"constructed\");\n    this.handleButtons = this.handleButtons.bind(this);\n    this.unanswered= this.unanswered.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrev = this.handlePrev.bind(this);\n  }\n  componentDidMount() {\n    console.log(\"came into mounted\");\n    axios.get('http://localhost:8000/questions')\n    .then(response => {\n        console.log(response.data);\n        this.setState({ getQs: response.data.slice().sort(compareDates) });\n    })\n      .catch(error => {\n        console.error('Error fetching questions data:', error);\n    });\n    axios.get('http://localhost:8000/answers')\n    .then(response => {\n        console.log(response.data);\n        this.setState({ answers: response.data });\n    })\n      .catch(error => {\n        console.error('Error fetching answers data:', error);\n    });\n    console.log(\"finished\");\n  }\n\n  handleButtons = (status) => {\n    if(status==='active'){\n      console.log(\"you clicked on active\");\n      let newSort = this.active();\n      console.log(\"Active:\", newSort);\n      this.props.updatePage(\"all_question\", newSort);\n    }\n    else if(status==='unanswered'){\n      console.log(\"you clicked on unanswered\");\n      let newSort = this.unanswered();\n      console.log(newSort);\n      this.props.updatePage(\"all_question\", newSort);\n    }\n    else if(status==='newest'){\n      console.log(\"you clicked on newest\");\n      console.log(this.props.currPage);\n      let newSort = this.state.getQs;\n      console.log(newSort);\n      this.props.updatePage(\"all_question\", newSort);\n    }\n  };\n  handlePrev=()=>{\n    const startIndex = this.state.current * 5;\n    const endIndex = Math.min(startIndex + 5, this.state.questions.length);\n    this.setState({questions:this.props.questions.slice(startIndex, endIndex)})\n  }\n  handleNext=()=>{\n\n  }\n  searchAssociated(id) { //goes through each q and each answer to find the question with that id\n    let question_list = this.state.getQs;\n    console.log(question_list);\n    for (let i = 0; i < question_list.length; i++) {\n        let a = question_list[i].answers;\n        for (let j = 0; j < a.length; j++) {\n            if ((a[j])._id === id) {\n                return question_list[i];\n            }\n        }\n    }\n  }\n  active(){\n    console.log(\"testing active\");\n    let an = this.state.answers;\n    console.log(\"all the answers\");\n    console.log(an);\n    let ques = this.state.getQs;\n    console.log(ques);\n    let sortedList= new Set();\n    let anList=an.slice().sort(this.compareAnsDate);\n    //go through the list of sorted answers and find the associated question\n    for(let i =0; i<anList.length; i++)\n    {\n        console.log(anList[i]._id +\" \"+ anList[i].ans_by);\n        let c=this.searchAssociated(anList[i]._id);\n        if(c!==undefined)\n        {\n          console.log(\"found match\");\n            sortedList.add(c);\n        }\n    }\n    sortedList=[...sortedList];\n      for(let i=ques.length-1; i >= 0; i--){\n        let found=false;\n        let curr_id=ques[i]._id;\n        for (let j=0; j<sortedList.length; j++){\n          if (sortedList[j]._id===curr_id){\n            found=true;\n            break;\n          }\n        }\n        if (!found){\n          sortedList.push(ques[i]);\n        }\n      }\n    return sortedList;\n  }\n  compareAnsDate(x, y){\n    return new Date(y.ans_date_time) - new Date(x.ans_date_time);\n  }\n  unanswered(){\n    let ques=this.state.getQs;\n    let displaylist=[];\n    for(let i=0; i<ques.length; i++){\n        if(ques[i].answers.length===0){\n            displaylist.push(ques[i]);\n        }\n    }\n    console.log(displaylist);\n    return displaylist.slice().sort(compareDates);\n  }\n  render() {\n    let questions = this.props.questions;\n    const startIndex = this.state.current * 5;\n    const endIndex = Math.min(startIndex + 5, quesi.length);\n    questions = questions.slice(startIndex, endIndex)\n    const rows = [];\n    console.log(questions);\n    questions.forEach((question) => {\n      console.log(question);\n      rows.push(\n        <QuestionRow\n          question={question}\n          key={question._id}\n          updatePage={this.props.updatePage}\n          onQuestion={this.props.onQuestion}\n          handle = {this.props.handle}\n         /> \n      );\n    });\n    if(rows.length===0){\n      rows.push( <h3 key =\"none\" className=\"not_found\">No Questions Found</h3>)\n    }\n    let qhead=\"All Questions\";\n    if(this.props.currPage === \"search\"){\n        qhead = \"Search Results\";\n    }\n    console.log(this.props.userType);\n    return (\n      <div className=\"main-table\" id=\"all_questions\">\n      <table id=\"top_table\">\n        <tbody>\n          <tr id=\"top_row\">\n          <td id=\"first_row\">\n            <div id=\"top\">\n              <h3 id=\"q_head\">{qhead}</h3>\n              {this.props.userType !== \"guest\" && (\n              <button type=\"button\" id =\"ask_button\" onClick={() => this.props.updatePage('question_form')}>Ask Question</button>\n              )}\n            </div>\n            </td>\n          </tr>\n          <tr id=\"next\">\n            <td id=\"next_row\">\n              <h5 id=\"question_count\">{questions.length > 1 ? questions.length + \" Questions\": questions.length + \" Question\"}</h5>\n              <div id=\"buttons_cell\">\n                  <button type=\"button\" id=\"newest_button\" onClick={() => this.handleButtons('newest')}>Newest</button>\n                  <button type=\"button\" id=\"active_button\" onClick={() => this.handleButtons('active')}>Active</button>\n                  <button type=\"button\" id=\"unanswered_button\" onClick={() => this.handleButtons('unanswered')}>Unanswered</button>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      {rows}\n      {rows.length > 5 && (\n          <div id=\"buttom_buttons\">\n              <button type=\"button\" id=\"prev_button\" onClick={() => this.handleButtons('newest')}>Prev</button>\n              <button type=\"button\" id=\"next_button\" onClick={() => this.handleButtons('active')}>Next</button>\n          </div>\n      )}\n      </div>\n    );\n  }\n}\n\n\nclass QuestionRow extends React.Component {\n  createButtons(){\n    let buttons=[]\n    let tags = this.props.question.tags;\n    tags.forEach(ques=>{\n         let curr= ques.name;\n         buttons.push(<button type=\"button\" key={curr} className= \"tag_buttons\">{curr}</button>);\n      });\n    return (\n        <div>\n          {buttons}\n        </div>\n    )\n  }\n  saveQuestion(q){\n    this.props.updatePage('answer_page');\n    this.props.onQuestion(q);\n  }\n  render() {\n    const question = this.props.question;\n    console.log(question.asked_by);\n    console.log(question.ask_date_time)\n    return (\n      <table className=\"innertable\" id=\"post_table\">\n        <tbody>\n          <tr className=\"table_r1\">\n            <td className=\"summary\">{question.votes}{question.votes<=1 ? \" vote\" : \" votes\"}<br></br>{question.answers.length}{question.answers.length<=1 ? \" answer\" : \" answers\"}<br></br>{question.views}{question.views<=1 ? \" view\" : \" views\"}</td>\n            <td className=\"question\"><a href= \"#question\" onClick={()=>this.saveQuestion(question)}>{question.title}</a><br></br>\n             {this.createButtons()}\n            </td>\n            <td className=\"user_cell\">\n            <p className=\"u\">{question.asked_by}</p>\n            <p className=\"t\">{\"asked \" + this.props.handle(question.ask_date_time)}</p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\nfunction compareDates(x, y){\n  return new Date(y.ask_date_time) - new Date(x.ask_date_time);\n}\n\nexport default QuestionTable;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}